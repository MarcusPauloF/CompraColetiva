// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using acme.sistemas.compracoletiva.infra.Config;

#nullable disable

namespace acme.sistemas.compracoletiva.infra.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Location.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(230)
                        .IsUnicode(false)
                        .HasColumnType("varchar(230)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(230)
                        .IsUnicode(false)
                        .HasColumnType("varchar(230)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(230)
                        .IsUnicode(false)
                        .HasColumnType("varchar(230)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(230)
                        .IsUnicode(false)
                        .HasColumnType("varchar(230)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Cep")
                        .IsUnique();

                    b.ToTable("Endereco", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Location.EnderecoPessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("EnederecoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("EnederecoId");

                    b.HasIndex("PessoaId");

                    b.ToTable("EnderecoPessoa", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Package.Pacote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<Guid>("Codigo")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Preco")
                        .HasPrecision(20)
                        .HasColumnType("int");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Pacote", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Product.Oferta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<bool>("Comprador")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Condicao")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("Fornecedor")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PalavraChavePesquisa")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("QuantidadeOfertaDisponivel")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("ValorComDesconto")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)");

                    b.Property<decimal>("ValorProduto")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Oferta", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Product.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasPrecision(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<int>("Prazo")
                        .HasPrecision(20)
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeTotalDisponivel")
                        .HasColumnType("int");

                    b.Property<int>("TicketMinimo")
                        .HasPrecision(20)
                        .HasColumnType("int");

                    b.Property<Guid>("TipoProdutoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("ValorCompra")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)");

                    b.Property<decimal>("ValorUnitario")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)");

                    b.Property<decimal>("ValorVenda")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)");

                    b.HasKey("Id");

                    b.HasIndex("TipoProdutoId");

                    b.ToTable("Produto", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Product.ProdutoUsuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("Prazo")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ProdutoUsuario", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Product.TipoProduto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasPrecision(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasPrecision(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("TipoProduto", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Sales.Compra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Quantidade")
                        .HasPrecision(20)
                        .HasColumnType("int");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Valor")
                        .HasPrecision(20)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Compra", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Sales.CompraProduto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<Guid>("CompraId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Quantidade")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("UsuarioCompraId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UsuarioVendaId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("ValorTotal")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("ValorUnitario")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("UsuarioCompraId");

                    b.HasIndex("UsuarioVendaId");

                    b.ToTable("CompraProduto", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Sales.Encomenda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UsuarioClienteId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UsuarioFornecedorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("UsuarioClienteId");

                    b.HasIndex("UsuarioFornecedorId");

                    b.ToTable("Encomenda", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Sales.UnidadeMedidaCompra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("UnidadeMedidaCompra", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Security.ConfiguracaoToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AccessKey")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Expiracao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("ConfiguracaoToken", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Security.ConfiguracaoTokenSistema", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<Guid>("AutenticacaoId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SistemaEmissao")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ValidoEm")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)")
                        .HasDefaultValue("2");

                    b.HasKey("Id");

                    b.HasIndex("AutenticacaoId");

                    b.ToTable("ConfiguracaoTokenSistema", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Security.Permissao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Security.PermissaoClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ClaimType")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Security.PermissaoUsuario", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Add")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Delete")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Read")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Update")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Security.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ClaimType")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Security.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("ProviderDisplayName")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Security.UserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Value")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Users.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("EmailId")
                        .HasColumnType("char(36)");

                    b.Property<string>("InscricaoMunicipal")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("int");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("EmailId")
                        .IsUnique();

                    b.ToTable("Pessoa", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Users.TipoUsuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("TipoUsuario", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Users.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int")
                        .HasColumnName("QuantidadeFalhaAoAcessar");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasMaxLength(255)
                        .HasColumnType("tinyint(255)")
                        .HasColumnName("EmailConfirmado");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("EmailNormalizado");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("Senha");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("char(36)")
                        .HasColumnName("PessoaId");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("Celular");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("CelularConfirmado");

                    b.Property<string>("SecurityStamp")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<Guid>("TipoUsuarioId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("AutenticacaoDoisFatores");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("Nome");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.HasIndex("PessoaId");

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Utils.Arquivo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("Caminho")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Extensao")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NomeExibicao")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NomeSalvo")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Arquivo", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Utils.ConfiguracaoEmail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("ConfigSet")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Porta")
                        .HasPrecision(10)
                        .HasColumnType("int");

                    b.Property<bool>("Ssl")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("ConfiguracaoEmail", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Utils.Email", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Email", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Utils.EmailConfiguracaoEmail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<Guid>("ConfiguracaoEmailId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("EmailEnvioId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("EmailRemetenteId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ConfiguracaoEmailId");

                    b.HasIndex("EmailEnvioId")
                        .IsUnique();

                    b.HasIndex("EmailRemetenteId")
                        .IsUnique();

                    b.ToTable("EmailConfiguracaoEmail", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Utils.EnvioEmail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("Corpo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("DestinatarioId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DestinatarioId")
                        .IsUnique();

                    b.ToTable("EnvioEmail", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Utils.Notificacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Notificacao", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Utils.Pagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataEmQueDinheiroCaiNaConta")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataPrevistaPagamento")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NomePagador")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("ValorAReceber")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("ValorRecebido")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pagamento", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Utils.Parametro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(512)
                        .IsUnicode(false)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Parametro", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Utils.Reserva", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Expiracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Prazo")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Quantidade")
                        .HasPrecision(20)
                        .HasColumnType("int");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reserva", (string)null);
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Utils.Seguro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<decimal>("Taxa")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid?>("UsuarioCriacaoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UsuarioModificacaoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Seguro", (string)null);
                });

            modelBuilder.Entity("EmailCopias", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("EmailId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("EnvioEmailId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("EmailId");

                    b.HasIndex("EnvioEmailId");

                    b.ToTable("EmailCopias");
                });

            modelBuilder.Entity("NotificacaoUsuario", b =>
                {
                    b.Property<Guid>("NotificacoesId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UsuariosId")
                        .HasColumnType("char(36)");

                    b.HasKey("NotificacoesId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("NotificacaoUsuario");
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Location.EnderecoPessoa", b =>
                {
                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Location.Endereco", "Endereco")
                        .WithMany("EnderecoPessoas")
                        .HasForeignKey("EnederecoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Users.Pessoa", "Pessoa")
                        .WithMany("EnderecoPessoas")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Product.Oferta", b =>
                {
                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Users.Usuario", "Usuario")
                        .WithMany("Ofertas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Product.Produto", b =>
                {
                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Product.TipoProduto", "TipoProduto")
                        .WithMany("Produtos")
                        .HasForeignKey("TipoProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoProduto");
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Product.ProdutoUsuario", b =>
                {
                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Product.Produto", "Produto")
                        .WithMany("ProdutoUsuarios")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Users.Usuario", "Usuario")
                        .WithMany("ProdutoUsuarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Sales.CompraProduto", b =>
                {
                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Sales.Compra", "Compra")
                        .WithMany("CompraProduto")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Product.Produto", "Produto")
                        .WithMany("CompraProdutos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Users.Usuario", "UsuarioCompra")
                        .WithMany("UsuariosCompras")
                        .HasForeignKey("UsuarioCompraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Users.Usuario", "UsuarioVenda")
                        .WithMany("UsuariosVendas")
                        .HasForeignKey("UsuarioVendaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Produto");

                    b.Navigation("UsuarioCompra");

                    b.Navigation("UsuarioVenda");
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Sales.Encomenda", b =>
                {
                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Product.Produto", "Produto")
                        .WithMany("Encomendas")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Users.Usuario", "UsuarioCliente")
                        .WithMany("RealizaEncomendas")
                        .HasForeignKey("UsuarioClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Users.Usuario", "UsuarioFornecedor")
                        .WithMany("ForneceEncomendas")
                        .HasForeignKey("UsuarioFornecedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("UsuarioCliente");

                    b.Navigation("UsuarioFornecedor");
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Security.ConfiguracaoTokenSistema", b =>
                {
                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Security.ConfiguracaoToken", "Autorizacao")
                        .WithMany("AutenticacoesSistemas")
                        .HasForeignKey("AutenticacaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Autorizacao");
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Security.PermissaoClaim", b =>
                {
                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Security.Permissao", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Security.PermissaoUsuario", b =>
                {
                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Security.Permissao", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Users.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Security.UserClaim", b =>
                {
                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Users.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Security.UserLogin", b =>
                {
                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Users.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Security.UserToken", b =>
                {
                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Users.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Users.Pessoa", b =>
                {
                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Utils.Email", "Email")
                        .WithOne("Pessoa")
                        .HasForeignKey("acme.sistemas.compracoletiva.domain.Entity.Users.Pessoa", "EmailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Email");
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Users.Usuario", b =>
                {
                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Users.Pessoa", "Pessoa")
                        .WithMany("Usuarios")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Users.TipoUsuario", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoUsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pessoa");

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Utils.EmailConfiguracaoEmail", b =>
                {
                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Utils.ConfiguracaoEmail", "ConfiguracaoEmail")
                        .WithMany("EmailConfiguracaoEmail")
                        .HasForeignKey("ConfiguracaoEmailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Utils.Email", "EmailEnvio")
                        .WithOne("EmailConfiguracaoEmailEnvioEmail")
                        .HasForeignKey("acme.sistemas.compracoletiva.domain.Entity.Utils.EmailConfiguracaoEmail", "EmailEnvioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Utils.Email", "EmailRemetente")
                        .WithOne("EmailConfiguracaoEmailRemetente")
                        .HasForeignKey("acme.sistemas.compracoletiva.domain.Entity.Utils.EmailConfiguracaoEmail", "EmailRemetenteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ConfiguracaoEmail");

                    b.Navigation("EmailEnvio");

                    b.Navigation("EmailRemetente");
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Utils.EnvioEmail", b =>
                {
                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Utils.Email", "Destinatario")
                        .WithOne("DestinatiroEmail")
                        .HasForeignKey("acme.sistemas.compracoletiva.domain.Entity.Utils.EnvioEmail", "DestinatarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Destinatario");
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Utils.Pagamento", b =>
                {
                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Users.Usuario", "Usuario")
                        .WithMany("Pagamentos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Utils.Reserva", b =>
                {
                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Product.Produto", "Produto")
                        .WithMany("ListaDeReserva")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Users.Usuario", "Usuario")
                        .WithMany("Reservas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EmailCopias", b =>
                {
                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Utils.Email", null)
                        .WithMany()
                        .HasForeignKey("EmailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Utils.EnvioEmail", null)
                        .WithMany()
                        .HasForeignKey("EnvioEmailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("NotificacaoUsuario", b =>
                {
                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Utils.Notificacao", null)
                        .WithMany()
                        .HasForeignKey("NotificacoesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("acme.sistemas.compracoletiva.domain.Entity.Users.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Location.Endereco", b =>
                {
                    b.Navigation("EnderecoPessoas");
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Product.Produto", b =>
                {
                    b.Navigation("CompraProdutos");

                    b.Navigation("Encomendas");

                    b.Navigation("ListaDeReserva");

                    b.Navigation("ProdutoUsuarios");
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Product.TipoProduto", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Sales.Compra", b =>
                {
                    b.Navigation("CompraProduto");
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Security.ConfiguracaoToken", b =>
                {
                    b.Navigation("AutenticacoesSistemas");
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Users.Pessoa", b =>
                {
                    b.Navigation("EnderecoPessoas");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Users.TipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Users.Usuario", b =>
                {
                    b.Navigation("ForneceEncomendas");

                    b.Navigation("Ofertas");

                    b.Navigation("Pagamentos");

                    b.Navigation("ProdutoUsuarios");

                    b.Navigation("RealizaEncomendas");

                    b.Navigation("Reservas");

                    b.Navigation("UsuariosCompras");

                    b.Navigation("UsuariosVendas");
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Utils.ConfiguracaoEmail", b =>
                {
                    b.Navigation("EmailConfiguracaoEmail");
                });

            modelBuilder.Entity("acme.sistemas.compracoletiva.domain.Entity.Utils.Email", b =>
                {
                    b.Navigation("DestinatiroEmail")
                        .IsRequired();

                    b.Navigation("EmailConfiguracaoEmailEnvioEmail")
                        .IsRequired();

                    b.Navigation("EmailConfiguracaoEmailRemetente")
                        .IsRequired();

                    b.Navigation("Pessoa")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
